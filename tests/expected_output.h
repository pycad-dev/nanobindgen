#pragma once
// This file was autogenerated. Do not edit. //
#include "input.h"

void bind_input(nb::module_ &m)
{
    // Classes
    nb::class_<Test>(m, "Test")
        .def("overload", nb::overload_cast<double>(&Test::overload), "&a"_a, "An overloaded function\n\nArgs:\n    a: First param")
        .def("overload", nb::overload_cast<int>(&Test::overload), "a"_a, "An overloaded function\n\nArgs:\n    a: Alternate param");

    nb::class_<Test2>(m, "Test2")
        .def("trivial", &Test2::trivial, "Trivial function");

    // Functions
    m.def("free", &free, "a"_a, "b"_a, "A free function\n\nArgs:\n    a: Hello\n    b: Bye\n\nReturns: Fye");

    m.def("free_return_simple", &free_return_simple, "A simple return type\n\nReturns: Simple return type");

    // Enums

};
